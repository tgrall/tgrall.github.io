"use strict";(self.webpackChunktgrall_blog=self.webpackChunktgrall_blog||[]).push([[96784],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),c=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=c(n),d=r,h=m["".concat(s,".").concat(d)]||m[d]||p[d]||a;return n?o.createElement(h,i(i({ref:t},u),{},{components:n})):o.createElement(h,i({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},44293:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var o=n(87462),r=(n(67294),n(3905));const a={title:"How to get the latest document by date/time field?",categories:"couchbase json views nosql"},i=void 0,l={permalink:"/blog/2013/02/18/how-to-get-the-latest-document-by-date-slash-time-field",editUrl:"https://github.dev/tgrall/tgrall.github.io/blob/main/blog/2013-02-18-how-to-get-the-latest-document-by-date-slash-time-field.md",source:"@site/blog/2013-02-18-how-to-get-the-latest-document-by-date-slash-time-field.md",title:"How to get the latest document by date/time field?",description:"I read this question on Twitter, let me answer the question in this short article.",date:"2013-02-18T00:00:00.000Z",formattedDate:"February 18, 2013",tags:[],readingTime:1.295,hasTruncateMarker:!1,authors:[],frontMatter:{title:"How to get the latest document by date/time field?",categories:"couchbase json views nosql"},prevItem:{title:"Easy application development with Couchbase, Angular and Node",permalink:"/blog/2013/03/06/easy-application-development-with-couchbase-angular-and-node"},nextItem:{title:"Introduction to Collated Views with Couchbase 2.0",permalink:"/blog/2013/02/13/introduction-to-collated-views-with-couchbase-2-dot-0"}},s={authorsImageUrls:[]},c=[],u={toc:c};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"I read this question on Twitter, let me answer the question in this short article."),(0,r.kt)("p",null,"First of all you need to be sure your documents have an attribute that contains a date ;), something like :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "type" : "emp",\n  "id":"001",\n  "name":"John Doe",\n  "hiredate":"Jan 1, 2013 8:32:00 AM"\n}\n')),(0,r.kt)("p",null,'To get the "latest hired employee" you need to create a view, and emit the hire date as key. The important part is to check that this date is emitted in a format that is sorted properly, for example an array of value using dateToArray function, or the time as numerical value. In the following view I am using the date as an array like that I will be able to do some grouping but this is another topic. The view looks like the following:'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"function (doc, meta) {\n  if (doc.hiredate) {\n    emit( dateToArray(doc.hiredate) );\n  }\n}\n")),(0,r.kt)("p",null,"Now that you have a view. You can now query it using the parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"descending = true"),(0,r.kt)("li",{parentName:"ul"},"limit = 1")),(0,r.kt)("p",null,"If you use Java SDK the code will look like the following :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'import com.couchbase.client.protocol.views.Query;\nimport com.couchbase.client.protocol.views.View;\nimport com.couchbase.client.protocol.views.ViewResponse;\nimport com.couchbase.client.protocol.views.ViewRow;\n...\n...\n...\n\n  View view = cb.getView("employees", "by_hiredate");\n  Query query = new Query();\n  query.setIncludeDocs(true);\n  query.setLimit(1);\n  query.setDescending(true);\n  ViewResponse viewResponse = cb.query(view, query);\n  for (ViewRow row : viewResponse) {\n    String documentJson = row.getDocument();\n  }\n')),(0,r.kt)("p",null,'Finally it is important when you work with views to understand how the index are managed by the server so be sure your read the chapter "',(0,r.kt)("a",{parentName:"p",href:"http://www.couchbase.com/docs/couchbase-manual-2.0/couchbase-views-writing-stale.html"},"Index Updates and the stale Parameter"),'".'))}p.isMDXComponent=!0}}]);
(self.webpackChunktgrall_blog=self.webpackChunktgrall_blog||[]).push([[92198],{3905:function(e,t,a){"use strict";a.d(t,{Zo:function(){return p},kt:function(){return h}});var n=a(67294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(a),h=o,m=d["".concat(s,".").concat(h)]||d[h]||u[h]||r;return a?n.createElement(m,l(l({ref:t},p),{},{components:a})):n.createElement(m,l({ref:t},p))}));function h(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,l=new Array(r);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var c=2;c<r;c++)l[c]=a[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},52435:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return c},assets:function(){return p},toc:function(){return u},default:function(){return h}});var n=a(22122),o=a(19756),r=(a(67294),a(3905)),l=["components"],i={title:"Grails on Oracle (OracleAS and OracleXE)",categories:"grails groovy oracle"},s=void 0,c={permalink:"/blog/2006/05/03/grails-on-oracle-oracleas-and-oraclexe",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/blog/blog/2006-05-03-grails-on-oracle-oracleas-and-oraclexe.md",source:"@site/blog/2006-05-03-grails-on-oracle-oracleas-and-oraclexe.md",title:"Grails on Oracle (OracleAS and OracleXE)",description:"OTN (Oracle Technology Network)",date:"2006-05-03T00:00:00.000Z",formattedDate:"May 3, 2006",tags:[],readingTime:9.105,truncated:!1,authors:[],prevItem:{title:"More Groovy at Javaone !",permalink:"/blog/2006/05/11/more-groovy-at-javaone"},nextItem:{title:"Oracle BPEL: Debugging 'internal' SOAP Messages",permalink:"/blog/2006/04/23/oracle-bpel-debugging-internal-soap-messages"}},p={authorsImageUrls:[]},u=[{value:"What is Groovy? What is Grails?",id:"what-is-groovy-what-is-grails",children:[]},{value:"Example: The product Catalog",id:"example-the-product-catalog",children:[]},{value:"Conclusion",id:"conclusion",children:[]},{value:"Resources",id:"resources",children:[]}],d={toc:u};function h(e){var t=e.components,a=(0,o.Z)(e,l);return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"OTN (Oracle Technology Network)\nReaders have noticed, that Oracle has\npublished an article from ",(0,r.kt)("a",{parentName:"p",href:"http://www.monson-haefel.com/"},"Richard Monson-Haefel")," about ",(0,r.kt)("a",{parentName:"p",href:"http://www.oracle.com/technology/pub/articles/haefel-oracle-ruby.html"},"Ruby On Rails on Oracle"),". This\narticle introduces the Ruby On Rails framework and explains how to use\nit to access an Oracle database. (",(0,r.kt)("a",{parentName:"p",href:"http://www.oracle.com/technology/products/database/xe/index.html"},"Oracle 10g Express Edition")," to be exact)"),(0,r.kt)("p",null,"If you are not familiar at all with Ruby On Rails, it is important to\nnotice that it has nothing to do with Java, J2EE. It is a ",(0,r.kt)("a",{parentName:"p",href:"http://www.ruby-lang.org/"},"Ruby"),"\nbased framework. ","\xa0","So yes Ruby On Rails is really interesting,\npowerful and so on... but for me as a Java developer I would like to do\nthe same using Java (or equivalent) leveraging the investment that I\nhave done in J2EE; also important I want to be able to deploy and\nmanage applications that are developed this way using my tools such as\nOracle Enterprise Manager Application Server Control."),(0,r.kt)("p",null,'The paradigm "coding by convention" that is the driver of Ruby on Rails\nhas been leveraged to developed a new framework: GRAILS. Grails uses\nGroovy as the underlying language, so it runs on a JVM and can leverage\nany existing Java API.'),(0,r.kt)("p",null,"If you are a Java developer you will find very interesting to use this\nframework to accelerate the development of Web applications. If you are\nnot yet a Java developer but need to develop Web application faster,\nand deploy the to your J2EE application server, Grails is also a very\ngood tools."),(0,r.kt)("p",null,"Since I have started with Richard's article I will use the same\napplication/database schema to develop my first GRAILS application, and\nalso use the same structure in my article...(",(0,r.kt)("em",{parentName:"p"},"is it what we call lazy loading?"),")"),(0,r.kt)("h3",{id:"what-is-groovy-what-is-grails"},"What is Groovy? What is Grails?"),(0,r.kt)("p",null,"Groovy is a dynamic language that leverage features from other\nlanguages such as Ruby, Jython, and Smalltalk. Groovy is running at the\ntop of a Java VM and makes available any existing Java objects (so all\nthe API) to Groovy. Groovy is currently under standardization with the ",(0,r.kt)("a",{parentName:"p",href:"http://www.jcp.org/en/jsr/detail?id=241"},"JSR-24"),(0,r.kt)("a",{parentName:"p",href:"http://www.jcp.org/en/jsr/detail?id=241"},"1"),".\n","\xa0","You can learn more about Groovy on the ",(0,r.kt)("a",{parentName:"p",href:"http://groovy.codehaus.org/"},"Groovy site")," and is ",(0,r.kt)("a",{parentName:"p",href:"http://glaforge.free.fr/weblog/?catid=2"},"project leader's (Guillaume Laforge) blog"),"."),(0,r.kt)("p",null,'GRAILS is to Groovy what Ruby On Rails is to Ruby. Originally named "',(0,r.kt)("em",{parentName:"p"},"Groovy On Rails"),'",\nthis name has been dropped in favor of Grails to avoid\nconfusion/competition. Like Ruby on Rails, Grails is designed to\ncreate ',(0,r.kt)("a",{parentName:"p",href:"http://en.wikipedia.org/wiki/CRUD_%28acronym%29"},"CRUD"),"\n(",(0,r.kt)("em",{parentName:"p"},"Create Read Update Delete"),") Web applications. ","\xa0","You can learn more\nabout Grail on the ",(0,r.kt)("a",{parentName:"p",href:"http://grails.codehaus.org/"},"Grails site")," and is ",(0,r.kt)("a",{parentName:"p",href:"http://graemerocher.blogspot.com/"},"project leader's (Graeme Rocher) blog"),"."),(0,r.kt)("p",null,"Let's now dive in the sample application, for this, as stated earlier I\nam using the sample application described in the OTN articles."),(0,r.kt)("h3",{id:"example-the-product-catalog"},"Example: The product Catalog"),(0,r.kt)("h4",{id:"step-1-set-up-the-oracle-database"},"Step 1: Set up the Oracle database"),(0,r.kt)("p",null,"If you have not set up the schema and table from the article you just\nneed to create the following objects:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"CREATE TABLE comics (\n    id NUMBER(10) NOT NULL,\n    title VARCHAR2(60),\n    issue NUMBER(4),\n    publisher VARCHAR2(60),\n    PRIMARY KEY (id)\n    );\n    CREATE SEQUENCE comics_seq;\n")),(0,r.kt)("p",null,"Based on the OTN article I have created this table in the ",(0,r.kt)("span",{class:"code"},"ruby")," schema."),(0,r.kt)("h4",{id:"step-2-install-grails"},"Step 2: Install Grails"),(0,r.kt)("p",null,"Grails installation is straight forward and explained in the ",(0,r.kt)("a",{parentName:"p",href:"http://grails.codehaus.org/Installation"},"Installation guide"),", basically:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Download the binaries (I used ",(0,r.kt)("a",{parentName:"li",href:"http://build.canoo.com/grails/artifacts//grails-bin-0.2-SNAPSHOT.zip"},"Grails 0.2"),")"),(0,r.kt)("li",{parentName:"ol"},"Setup the different environment variable (",(0,r.kt)("span",{class:"code"},"GRAILS_HOME, JAVA_HOME, PATH"),"), I used Java 5.")),(0,r.kt)("p",null,"You are done !"),(0,r.kt)("h4",{id:"step-3-create-the-web-application"},"Step 3: create the Web Application"),(0,r.kt)("p",null,"Now we have installed the product, the next step is to create the application itself."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Create the application")),(0,r.kt)("p",null,"The ",(0,r.kt)("span",{class:"code"},"create-app")," command is\ncreating the full project, with the template\nwith placeholder for the different components of your application such\nas configuration, MVC, and library and much more. To do it enter the\nfollowing command, in your command line interface:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"> grails create-app\n....\n.....\ncreate-app:\n[input] Enter application name:\ncomics_catalog\n.....\n")),(0,r.kt)("p",null,"As you will see, Grails uses Ant intensively, the ",(0,r.kt)("span",{class:"code"},"create-app"),"\ncommand will ask you for an application name, enter for example ",(0,r.kt)("span",{class:"code"},"comics_catalog"),"."),(0,r.kt)("p",null,"The created application contains now a list of directory allowing\ndeveloper to start to build the application using Groovy, Grails and\nany Web components."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Add the Business Logic and Model:Domain Classes"))),(0,r.kt)("p",null,'One of the biggest differences between Grails and RoR, is the fact that\nthe main components of your application development is not the Table\nlike you have in RubyOnRails but the "Domain Class". ',"\xa0","The\ndomain class are the core of the business application, they contains\nthe state and the behavior of your application."),(0,r.kt)("p",null,"So the next step is to create a Domain Class for the Comics, to do that\nyou just need to go in the home directory of your project, eg cd ",(0,r.kt)("span",{class:"code"},"comics_catalog")," and run the ",(0,r.kt)("span",{class:"code"},"create-domain-class"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"> cd comics_catalog\n> grails create-domain-class\n....\ncreate-domain-class:\n[input] Enter domain class name:\ncomics\n....\n")),(0,r.kt)("p",null,"When the command ask you to enter the class name, enter ",(0,r.kt)("span",{class:"code"},"comics"),". Grails, will not use the\nsame naming convention that RoR has, so you need to use the same name\nfor the class and the table you want to map your object on. The\npersistence layer is made using GROM (Grails Object Relational Mapping)\nthat leverage hibernate."),(0,r.kt)("p",null,"Note: In our case what we are doing is to leverage an existing database\nobject and create the domain class at the top of it. Usually, Grails\nuses a different approach where everything is driven by the\napplication, so you create the domain class first and then Grails will\ncreate the different database objects."),(0,r.kt)("p",null,"The Comics class does not have any information related to the mapping\nitself, so you have to create the different attributes in the domain\nclass. This is where you you start to use Groovy, the domain class is\nlocated in the following location:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"./comics_catalog/grails-app/domain/Comics.groovy"))),(0,r.kt)("p",null,"Note hat by default Grails create the class with 2 attributes: id and\nversion, keep them in place, and add title, issue and\npublisher.","\xa0"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'class Comics {\n  @Property Long id\n  @Property Long version\n\n  // new properties for the Comics class\n  @Property String title\n  @Property Long issue\n  @Property String publisher\n\n  String toString() { "${this.class.name} :  $id" }\n}\n')),(0,r.kt)("p",null,"We are all set, we are ready to run the magic command that will create the different screens and flow."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Create the different screens from the domain class")),(0,r.kt)("p",null,"You can now run the ",(0,r.kt)("inlineCode",{parentName:"p"},"generate-all")," command to create all the different screens."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"> grails generate-all\n....\ninput-domain-class:\n[input] Enter domain class name:\ncomics\n....\n")),(0,r.kt)("p",null,"This command creates the different Views and Controllers, you can take a look to the directories:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"./comics_catalog/grails-app/controllers")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"./comics_catalog/grails-app/views"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Configure the database access")),(0,r.kt)("p",null,"What we have to do is now to configure the application to use the Oracle database and schema."),(0,r.kt)("p",null,"Grails uses a configuration file for data source:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"./comics_catalog/grails-app/conf/ApplicationDataSource.groovy"))),(0,r.kt)("p",null,"Let's edit this file to connect to our Oracle database."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'\nclass ApplicationDataSource {\n  @Property boolean pooled = true\n  @Property String dbCreate = "update" // one of \'create\', \'create-drop\',\'update\'\n  @Property String url = "jdbc:oracle:thin:@localhost:1521:XE"\n  @Property String driverClassName = "oracle.jdbc.OracleDriver"\n  @Property String username = "ruby"\n  @Property String password = "ruby"\n}\n\n')),(0,r.kt)("p",null,"Nothing special concerning the properties such as URL, DriverClassName,\nusername and password."),(0,r.kt)("p",null,"The one that is interesting is the ",(0,r.kt)("span",{class:"code"},"dbCreate"),",\nthat allows you to configure the behavior on the schema to create or\nnot objects.In our sample the table exists, so we want to reuse the\nobject, but we want to be sure that we have all the mandatory objects,\ncolumns too, so I selected ",(0,r.kt)("span",{class:"code"},"update"),"."),(0,r.kt)("p",null,"The next thing to do is to add the Oracle JDBC driver to the\napplication, to make it available. To make it available you just need\nto copy the JDBC driver into the lib directory of your application. In\nmy case I am using Oracle XE so I copy the file from the following\nlocation:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ORACLE_XE_HOME/app/oracle/product/10.2.0/server/jdbc/lib/ojdbc14.jar"),"\nto"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"./comics_catalog/lib/"))),(0,r.kt)("h4",{id:"step-4-run-the-application"},"Step 4: Run the application"),(0,r.kt)("p",null,"Grails provide a way to run the application in stand alone mode, the command is ",(0,r.kt)("span",{class:"code"},"run-app"),". This command starts an Web container (based on Jetty) with the application","\xa0","deployed."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"grails run-app")),(0,r.kt)("p",null,"Note: Jetty will start on port 8080, in order to start in on a different port like e.g. 9090 use:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"grails -Dserver.port=9090 run-app")),(0,r.kt)("p",null,"You can now access the application using the following URL:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"http://localhost:8080/comics_catalog/comics/")),(0,r.kt)("p",null,"Your browser should show the list of comics from the Comics table."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://static.flickr.com/45/127519247_646a991d3a_o.png",alt:null})),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"List of Comics")),(0,r.kt)("p",null,'You can create a new entry by clicking on the "New Comics" tab, and view/edit/delete existing record by clicking on the "Show" link.'),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://static.flickr.com/56/127519249_0e580ede98_o.png",alt:null})),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Edit/Create entry")),(0,r.kt)("p",null,"As you see the creation of an application is really easy. The next step is to deploy the application in your application server."),(0,r.kt)("h4",{id:"step-5-deploy-the-application"},"Step 5: Deploy the application"),(0,r.kt)("p",null,"Grails provides a command to package the application as a WAR ready to\nbe deployed, so in the root directory of your project you can run the\nfollowing command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"grails war\n")),(0,r.kt)("p",null,"When you run this command you end with a WAR with the name of your\napplication located in the root of your project, in our case: ",(0,r.kt)("inlineCode",{parentName:"p"},"comics_catalog.war")),(0,r.kt)("p",null,"If you take a look to this WAR you'll see that it is quite big ~10Mb,\nthis is because all the libraries are included in the Lib directory of\nthe web application. You can see the exact structure of the WAR in the\n./tmp (",(0,r.kt)("inlineCode",{parentName:"p"},"./comics_catalog/tmp/war"),") directory of the application."),(0,r.kt)("p",null,"You can deploy the application as it is to Oracle Application Server 10",(0,r.kt)("em",{parentName:"p"},"g"),",\nbut to avoid the issue with the class loader you should configure the\nWeb application to load the local classes first. It can be done during\ndeployment with the class loader configuration screen:"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://static.flickr.com/52/127519251_8a522dac17_o.png",alt:null})),(0,r.kt)("p",null,"You can also save this configuration in a deployment plan to facilitate later deployment."),(0,r.kt)("p",null,"When the deployment is done you can access the application using the OracleAS host and port, something like:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"http://localhost:8888/comics_catalog/comics/list")),(0,r.kt)("p",null,"You can now administer and monitor the application like any other J2EE application deployed in OracleAS 10g."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Better Deployment Options")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"I personally do not like the idea of shipping all the Jar\nfiles in the WAR file, so instead you can use the OracleAS Shared\nLibraries to create a Grails library by uploading and configuring all\nthe Jars. And package the War without all these libraries."),(0,r.kt)("li",{parentName:"ul"},"Also you should be able to configure Hibernate/Spring to\nuse a standard define Data source and use the JNDI name to lookup the\nconnections.")),(0,r.kt)("h3",{id:"conclusion"},"Conclusion"),(0,r.kt)("p",null,"GRAILS like Ruby On Rails are really interesting frameworks allowing\ndevelopers to create quickly Web application that access relational\ndatabase and especially the Oracle Database."),(0,r.kt)("p",null,"Grails is quite new (release 0.2), but the documentation is really nice\nand complete. I will encourage all developers that are interested by\nsuch framework to use it and provide feedback to the development team."),(0,r.kt)("p",null,"I will try provide other post about deployment of Grails on OracleAS,\nbut also related to other interesting features of this framework, for\nexample Ajax support, Validations etc etc."),(0,r.kt)("h3",{id:"resources"},"Resources"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"http://grails.codehaus.org/"},"Grails")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"http://groovy.codehaus.org/"},"Groovy")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"http://rubyonrails.org/"},"Ruby on Rails"))))}h.isMDXComponent=!0}}]);
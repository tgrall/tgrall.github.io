"use strict";(self.webpackChunktgrall_blog=self.webpackChunktgrall_blog||[]).push([[59082],{3905:(e,a,t)=>{t.d(a,{Zo:()=>i,kt:()=>d});var n=t(67294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function s(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function p(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?s(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function l(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)t=s[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)t=s[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var o=n.createContext({}),m=function(e){var a=n.useContext(o),t=a;return e&&(t="function"==typeof e?e(a):p(p({},a),e)),t},i=function(e){var a=m(e.components);return n.createElement(o.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},c=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,s=e.originalType,o=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),c=m(t),d=r,h=c["".concat(o,".").concat(d)]||c[d]||u[d]||s;return t?n.createElement(h,p(p({ref:a},i),{},{components:t})):n.createElement(h,p({ref:a},i))}));function d(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var s=t.length,p=new Array(s);p[0]=c;var l={};for(var o in a)hasOwnProperty.call(a,o)&&(l[o]=a[o]);l.originalType=e,l.mdxType="string"==typeof e?e:r,p[1]=l;for(var m=2;m<s;m++)p[m]=t[m];return n.createElement.apply(null,p)}return n.createElement.apply(null,t)}c.displayName="MDXCreateElement"},28823:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>o,contentTitle:()=>p,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>m});var n=t(87462),r=(t(67294),t(3905));const s={title:"Save MapR Streams messages into MapR DB JSON",categories:"kafka streams howto maprdb json mapr"},p=void 0,l={permalink:"/blog/2016/03/30/save-mapr-streams-messages-into-mapr-db-json",editUrl:"https://github.dev/tgrall/tgrall.github.io/blob/main/blog/2016-03-30-save-mapr-streams-messages-into-mapr-db-json.md",source:"@site/blog/2016-03-30-save-mapr-streams-messages-into-mapr-db-json.md",title:"Save MapR Streams messages into MapR DB JSON",description:"In this article you will learn how to create a MapR Streams Consumer that saves all the messages into a MapR-DB JSON Table.",date:"2016-03-30T00:00:00.000Z",formattedDate:"March 30, 2016",tags:[],readingTime:3.005,hasTruncateMarker:!0,authors:[],frontMatter:{title:"Save MapR Streams messages into MapR DB JSON",categories:"kafka streams howto maprdb json mapr"},prevItem:{title:"Setting up Spark Dynamic Allocation on MapR",permalink:"/blog/2016/09/01/setting-up-spark-dynamic-allocation-on-mapr"},nextItem:{title:"Getting Started with MapR Streams",permalink:"/blog/2016/03/10/getting-started-with-mapr-streams"}},o={authorsImageUrls:[]},m=[{value:"Install and Run the sample MapR Streams application",id:"install-and-run-the-sample-mapr-streams-application",level:3},{value:"Save messages into MapR-DB JSON",id:"save-messages-into-mapr-db-json",level:3},{value:"Conclusion",id:"conclusion",level:3}],i={toc:m};function u(e){let{components:a,...t}=e;return(0,r.kt)("wrapper",(0,n.Z)({},i,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"In this article you will learn how to create a MapR Streams Consumer that saves all the messages into a ",(0,r.kt)("a",{parentName:"p",href:"http://maprdocs.mapr.com/51/#MapR-DB/JSON_DB/mapr_db_json_top.html"},"MapR-DB JSON Table"),"."),(0,r.kt)("h3",{id:"install-and-run-the-sample-mapr-streams-application"},"Install and Run the sample MapR Streams application"),(0,r.kt)("p",null,"The steps to install and run the applications are the same as the one defined in the following article:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.mapr.com/blog/getting-started-sample-programs-mapr-streams"},"MapR Streams application"))),(0,r.kt)("p",null,"Once you have the default producer and consumer running in your environment using the commands:"),(0,r.kt)("p",null,"Producer:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ java -cp $(mapr classpath):./mapr-streams-examples-1.0-SNAPSHOT-jar-with-dependencies.jar com.mapr.examples.Run producer\n")),(0,r.kt)("p",null,"Consumer:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ java -cp $(mapr classpath):./mapr-streams-examples-1.0-SNAPSHOT-jar-with-dependencies.jar com.mapr.examples.Run consumer\n")),(0,r.kt)("h3",{id:"save-messages-into-mapr-db-json"},"Save messages into MapR-DB JSON"),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/mapr-demos/mapr-streams-sample-programs/blob/master/src/main/java/com/mapr/examples/DBConsumer.java"},"DBConsumer")," class is a copy of the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/mapr-demos/mapr-streams-sample-programs/blob/master/src/main/java/com/mapr/examples/Consumer.java"},"Consumer")," class with small changes to save the messages coming from the ",(0,r.kt)("inlineCode",{parentName:"p"},"/sample-stream:fast-messages")," topic into a MapR-DB table named ",(0,r.kt)("inlineCode",{parentName:"p"},"/apps/fast-messages"),". "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"1- Add MapR-DB Maven dependency to your project")),(0,r.kt)("p",null,"Edit the ",(0,r.kt)("inlineCode",{parentName:"p"},"pom.xml")," file and add the following entry in the ",(0,r.kt)("inlineCode",{parentName:"p"},"dependencies")," tag:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"   <dependency>\n      <groupId>com.mapr.db</groupId>\n      <artifactId>maprdb</artifactId>\n      <version>5.1.0-mapr</version>\n   </dependency>\n")),(0,r.kt)("p",null,"This add support for:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"http://ojai.io/"},"OJAI")," Open JSON Application Interface"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"http://maprdocs.mapr.com/51/#MapR-DB/JSON_DB/crud_with_maprdb_ojai_java_api.html"},"MapR-DB JSON API")," ")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"2- Create and Get a JSON Table")),(0,r.kt)("p",null,"To save the messages, the application must access a JSON Table, for this just call the ",(0,r.kt)("inlineCode",{parentName:"p"},"MapRDB.getTable(TABLE_PATH)")," method. If the table does not exist, create it with the ",(0,r.kt)("inlineCode",{parentName:"p"},"MapRDB.createTable(TABLE_PATH)"),"."),(0,r.kt)("p",null,"This is what the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/mapr-demos/mapr-streams-sample-programs/blob/master/src/main/java/com/mapr/examples/DBConsumer.java#L113-L119"},(0,r.kt)("inlineCode",{parentName:"a"},"DBConsumer.getTable(TABLE_PATH)"))," method is doing."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"  private static Table getTable(String tablePath) {\n    if ( ! MapRDB.tableExists(tablePath)) {\n      return MapRDB.createTable(tablePath);\n    } else {\n      return MapRDB.getTable(tablePath);\n    }\n  }\n")),(0,r.kt)("p",null,"When the DBConsumer starts the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/mapr-demos/mapr-streams-sample-programs/blob/master/src/main/java/com/mapr/examples/DBConsumer.java#L41"},(0,r.kt)("inlineCode",{parentName:"a"},'getTable("/apps/fast-messages")'))," method is called."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'  Table fastMessagesTable = getTable("/apps/fast-messages");\n')),(0,r.kt)("p",null,"The table ",(0,r.kt)("inlineCode",{parentName:"p"},"fastMessagesTable")," is not available to the consumer."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"3- Save messages into the JSON Table")),(0,r.kt)("p",null,"Messages can be saved into the table using the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/mapr-demos/mapr-streams-sample-programs/blob/master/src/main/java/com/mapr/examples/DBConsumer.java#L78-L81"},"MapR-DB JSON Java API"),"."),(0,r.kt)("p",null,"The producer sends the message as JSON String that is converted into a JSON object names ",(0,r.kt)("inlineCode",{parentName:"p"},"msg"),". This object can be used to create an OJAI Document:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"  Document messageDocument = MapRDB.newDocument(msg);\n")),(0,r.kt)("p",null,"To be saved into MapR-DB, a document must have a ",(0,r.kt)("inlineCode",{parentName:"p"},"_id")," field. In this example let\u2019s use the message number generated by the producer ",(0,r.kt)("em",{parentName:"p"},"(JSON field ",(0,r.kt)("inlineCode",{parentName:"em"},"k"),")"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'  messageDocument.setId( Integer.toString(messageDocument.getInt("k")));\n')),(0,r.kt)("p",null,"Let\u2019s now save the document into the table:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"  fastMessagesTable.insertOrReplace( messageDocument );       \n")),(0,r.kt)("p",null,"Each time the producer will be executed, the message number counter will be initialized to 0. So the document _id will be the same, and the document into the table must be replaced; this is why the ",(0,r.kt)("inlineCode",{parentName:"p"},"insertOrReplace")," method is used."),(0,r.kt)("p",null,"Let\u2019s run the new consumer."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"4- Run the DBConsumer")),(0,r.kt)("p",null,"To run the DBConsumer just pass the parameter ",(0,r.kt)("inlineCode",{parentName:"p"},"dbconsumer")," as follow:"),(0,r.kt)("p",null,"Consumer:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ java -cp $(mapr classpath):./mapr-streams-examples-1.0-SNAPSHOT-jar-with-dependencies.jar com.mapr.examples.Run dbconsumer\n")),(0,r.kt)("p",null,"Note that a new ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/mapr-demos/mapr-streams-sample-programs/blob/master/src/main/java/com/mapr/examples/DBConsumer.java#L48-L54"},"group is created")," to be sure that messages are read by the two different consumers (Consumer and DBConsumer)."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"5- Query the messages saved into MapR-DB")),(0,r.kt)("p",null,"Messages are saved into the ",(0,r.kt)("inlineCode",{parentName:"p"},"/apps/fast-messages")," table, let\u2019s used the MapR DBShell to query the data. On your cluster run the following commands, as ",(0,r.kt)("inlineCode",{parentName:"p"},"mapr"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'$ mapr dbshell\nmaprdb mapr:> find /apps/fast-messages --id 100\n{"_id":"100","type":"test","t":64986.787,"k":{"$numberLong":100}}\n')),(0,r.kt)("h3",{id:"conclusion"},"Conclusion"),(0,r.kt)("p",null,"In this very simple example, the DBConsumer takes each message and saved it as a simple JSON Document into MapR-DB JSON. The table can be used to create any type of application, or using Apache Drill ",(0,r.kt)("em",{parentName:"p"},"(1.6 or later)")," to do some analytics."),(0,r.kt)("p",null,"In a real application the messages will probably be modified, enriched and/or aggregated and then the result be saved into MapR-DB Table. The goal of this sample is just to show that it is easy to integrate MapR Streams and MapR-DB."),(0,r.kt)("p",null,"You have also other alternative to achieve the same thing using for example:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Spark Streaming"),(0,r.kt)("li",{parentName:"ul"},"3rd Party ETL and Tools")))}u.isMDXComponent=!0}}]);
"use strict";(self.webpackChunktgrall_blog=self.webpackChunktgrall_blog||[]).push([[2697],{3905:(e,t,i)=>{i.d(t,{Zo:()=>p,kt:()=>g});var n=i(67294);function o(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function a(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function r(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?a(Object(i),!0).forEach((function(t){o(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):a(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function l(e,t){if(null==e)return{};var i,n,o=function(e,t){if(null==e)return{};var i,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||(o[i]=e[i]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(o[i]=e[i])}return o}var s=n.createContext({}),c=function(e){var t=n.useContext(s),i=t;return e&&(i="function"==typeof e?e(t):r(r({},t),e)),i},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var i=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(i),g=o,m=d["".concat(s,".").concat(g)]||d[g]||u[g]||a;return i?n.createElement(m,r(r({ref:t},p),{},{components:i})):n.createElement(m,r({ref:t},p))}));function g(e,t){var i=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=i.length,r=new Array(a);r[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,r[1]=l;for(var c=2;c<a;c++)r[c]=i[c];return n.createElement.apply(null,r)}return n.createElement.apply(null,i)}d.displayName="MDXCreateElement"},73253:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var n=i(87462),o=(i(67294),i(3905));const a={title:"TDD/Test Failures: Resolving Issues with GitHub Copilot",description:"See how Copilot has helped me implement business logic to fix a test failure",tags:["coding with copilot","github","copilot","rest","quarkus","panache","java","tdd","test"],keywords:["coding with copilot","github","copilot","tdd","test","testing","quarkus"],image:"/images/posts/2023-12-28/header.png",date:"2023-12-29T06:12"},r=void 0,l={permalink:"/blog/2023/12/29/github-copilot-fixing-test-failure",editUrl:"https://github.dev/tgrall/tgrall.github.io/blob/main/blog/2023-12-29-github-copilot-fixing-test-failure.md",source:"@site/blog/2023-12-29-github-copilot-fixing-test-failure.md",title:"TDD/Test Failures: Resolving Issues with GitHub Copilot",description:"See how Copilot has helped me implement business logic to fix a test failure",date:"2023-12-29T06:12:00.000Z",formattedDate:"December 29, 2023",tags:[{label:"coding with copilot",permalink:"/blog/tags/coding-with-copilot"},{label:"github",permalink:"/blog/tags/github"},{label:"copilot",permalink:"/blog/tags/copilot"},{label:"rest",permalink:"/blog/tags/rest"},{label:"quarkus",permalink:"/blog/tags/quarkus"},{label:"panache",permalink:"/blog/tags/panache"},{label:"java",permalink:"/blog/tags/java"},{label:"tdd",permalink:"/blog/tags/tdd"},{label:"test",permalink:"/blog/tags/test"}],readingTime:1.995,hasTruncateMarker:!1,authors:[],frontMatter:{title:"TDD/Test Failures: Resolving Issues with GitHub Copilot",description:"See how Copilot has helped me implement business logic to fix a test failure",tags:["coding with copilot","github","copilot","rest","quarkus","panache","java","tdd","test"],keywords:["coding with copilot","github","copilot","tdd","test","testing","quarkus"],image:"/images/posts/2023-12-28/header.png",date:"2023-12-29T06:12"},nextItem:{title:"Resize multiple Next.js components with GitHub Copilot",permalink:"/blog/2023/12/28/github-copilot-resize-nextjs-components"}},s={authorsImageUrls:[]},c=[],p={toc:c};function u(e){let{components:t,...i}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"In my Quarkus application, I encountered a hiccup with the Panache ORM while implementing and testing a REST service. Specifically, I faced a test failure related to the automatic update of a specifications list after deleting an element from the JSON/Entity. In this blog post, I'll walk you through the issue and demonstrate how GitHub Copilot came to the rescue, streamlining the implementation of a solution."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"The Challenge:")),(0,o.kt)("p",null,"The JSON schema for my REST service looked like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "id": 1,\n    "name": "Fanatic Falcon",\n    "description": "string",\n    "specifications" : [\n        {"id": 10, "name": "Falcom 100", "volume": 100},\n        {"id": 11, "name": "Falcom 110", "volume": 110},\n        {"id": 12, "name": "Falcom 120", "volume": 120} \n    ]\n    ```\n}\n')),(0,o.kt)("p",null,"I had a test verifying the number of specifications after the deletion of one of them. However, the Panache ORM didn't automatically update the specifications list after deletion, leading to a failing test."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"The Solution:")),(0,o.kt)("p",null,"To address this issue, I needed to implement business logic to delete specifications in the database that were not present in the JSON payload. I documented the logic in a comment and collaborated with GitHub Copilot to generate the code."),(0,o.kt)("p",null,"Here's a snippet of the code:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"...\n\n// if the number of specifications in the existing board is different than the number of specifications in the updated board\n// it means that some specifications have been removed, so we need to delete them\n// for this we meed to loop on existing specifications and see if they are in the updated board\n// if they are not add them to a list of specs to delete\n// then use removeAll on existing board specifications\nList<BoardSpecification> specsToDelete = new ArrayList<>();\nfor (BoardSpecification existingSpec : existingBoard.specifications) {\n    boolean found = false;\n    for (BoardSpecification spec : board.specifications) {\n        if (existingSpec.id.equals(spec.id)) {\n            found = true;\n        }\n    }\n    if (!found) {\n        specsToDelete.add(existingSpec);\n    }\n}\nexistingBoard.specifications.removeAll(specsToDelete);\nexistingBoard.persist();\n\n...\n")),(0,o.kt)("p",null,"Check out the video below to witness how I leveraged GitHub Copilot to easily implement the business logic."),(0,o.kt)("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/KXD_Kv6mvz0?si=1wRTLLzF2IUbTnSB",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",allowfullscreen:!0}),(0,o.kt)("p",null,"Once again, GitHub Copilot has proven to be an invaluable coding companion, significantly enhancing my efficiency and helping me overcome challenges in my coding journey. With its assistance, I navigated through the intricacies of the Panache ORM and successfully resolved the test failure, ensuring the seamless functionality of my Quarkus application."))}u.isMDXComponent=!0}}]);
"use strict";(self.webpackChunktgrall_blog=self.webpackChunktgrall_blog||[]).push([[12040],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>m});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=p(a),m=r,g=d["".concat(s,".").concat(m)]||d[m]||c[m]||o;return a?n.createElement(g,l(l({ref:t},u),{},{components:a})):n.createElement(g,l({ref:t},u))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var p=2;p<o;p++)l[p]=a[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},32553:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const o={title:"Some cool stuff about JSP 2.0",categories:["javaEE","jsp"]},l=void 0,i={permalink:"/blog/2004/11/26/some-cool-stuff-about-jsp-2-dot-0",editUrl:"https://github.dev/tgrall/tgrall.github.io/blob/main/blog/2004-11-26-some-cool-stuff-about-jsp-2-dot-0.md",source:"@site/blog/2004-11-26-some-cool-stuff-about-jsp-2-dot-0.md",title:"Some cool stuff about JSP 2.0",description:"J2EE 1.4 introduces a major release of JSP: 2.0.",date:"2004-11-26T00:00:00.000Z",formattedDate:"November 26, 2004",tags:[],readingTime:2.305,hasTruncateMarker:!0,authors:[],frontMatter:{title:"Some cool stuff about JSP 2.0",categories:["javaEE","jsp"]},prevItem:{title:"Article: Transaction Processing in Distributed Service-Oriented Applications",permalink:"/blog/2004/11/29/article-transaction-processing-in-distributed-service-oriented-applications"},nextItem:{title:"New Oracle White Paper: Accelerate Development and Deployment of Service-Oriented Applications",permalink:"/blog/2004/11/19/new-oracle-white-paper-accelerate-development-and-deployment-of-service-oriented-applications"}},s={authorsImageUrls:[]},p=[{value:"Direct usage of Expression Language (EL) in your JSP",id:"direct-usage-of-expression-language-el-in-your-jsp",level:5},{value:"Easy tags creation with .tag files",id:"easy-tags-creation-with-tag-files",level:5},{value:"Easy header and footer template using the prelude and coda includes",id:"easy-header-and-footer-template-using-the-prelude-and-coda-includes",level:5}],u={toc:p};function c(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"J2EE 1.4 introduces a major release of JSP: 2.0."),(0,r.kt)("p",null,"Here some of the cool new features:"),(0,r.kt)("h5",{id:"direct-usage-of-expression-language-el-in-your-jsp"},"Direct usage of Expression Language (EL) in your JSP"),(0,r.kt)("p",null,"You do not need to put the EL in any tag now, just use it as needed:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},"<html>\n<head><title>JSP 2.0 new features</title></head>\n<body>\nHello ${param.name}\n</body>\n</html>\n")),(0,r.kt)("p",null,"Find more about JSP 2.0 Expression Language in ",(0,r.kt)("a",{parentName:"p",href:"http://java.sun.com/j2ee/1.4/docs/tutorial/doc/JSPIntro7.html"},"the J2EE 1.4 tutorial"),"."),(0,r.kt)("h5",{id:"easy-tags-creation-with-tag-files"},"Easy tags creation with .tag files"),(0,r.kt)("p",null,"It is now easier to create your own tags.\nYou just need to create a new .tag file (or .tagx if you want to use XML syntax) in the WEB-INF/tags directory of your Web application; or META-INF/tags if you want to package the Tags in Jar file. So creating a .tag file is easy, using the attribute directive. The following example is a new tag named mytag.tag that prints a title set using the attribute title, in the color specified in the attribute textColor."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<%@ attribute name="title" required="true" description="Title of the document"%>\n<%@ attribute name="textColor" required="true" description="Color of the Title"%>\n<h1 style="color:${textColor}">${title}</h1>\n')),(0,r.kt)("p",null,"Here is the JSP that uses this new Tag:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<%@ taglib tagdir="/WEB-INF/tags/" prefix="tags"%>\n<html>\n<head>\n</head>\n<body>\n<p>\n<tags:mytag title="My new JSP" textColor="blue"/>\n</p>\n<p>\nHello World${param.name}\n</p>\n</body>\n</html>\n')),(0,r.kt)("h5",{id:"easy-header-and-footer-template-using-the-prelude-and-coda-includes"},"Easy header and footer template using the prelude and coda includes"),(0,r.kt)("p",null,"In most of the Web application that I have built, I started by creating template for my HTML pages; most of them to handle header and footer. Oracle JSP implementation provides this for a while using the ",(0,r.kt)("a",{parentName:"p",href:"http://download-west.oracle.com/docs/cd/B10464_01/web.904/b10320/trandepl.htm#1005780"},"Global Include feature"),". JSP 2.0 introduces a standard way of doing that using prelude and coda includes. I ",(0,r.kt)("em",{parentName:"p"},"hate")," the choice made by the spec to call that prelude and coda. May be good Java developer are necessary musicians, since this is commonly used there? Why not simply header/footer or using a prefix like pre.../post.... Anyway, that is not the point."),(0,r.kt)("p",null,"The way you can set a prelude and/or coda include to your JSPs is done with the new Web Descriptor tag: ",(0,r.kt)("inlineCode",{parentName:"p"},"<jsp-property-group>"),". This new tag allows you to configure a set of JSP that matches a specific URL. Part of the subtags of ",(0,r.kt)("inlineCode",{parentName:"p"},"<jsp-property-group>")," are:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"<include-coda>")," : the path to JSP fragment (.jspf) to include in the beginning all the JSP that matched the URL."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"<include-prelude>"),":the path to the JSP fragment to include in the end all the JSP that matched the URL.")),(0,r.kt)("p",null,"An example configuration:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},"<jsp-config>\n<jsp-property-group>\n<url-pattern>*.jsp</url-pattern>\n<include-prelude>/WEB-INF/includes/prelude.jsp</include-prelude>\n<include-coda>/WEB-INF/includes/coda.jsp</include-coda>\n</jsp-property-group>\n</jsp-config>\n")),(0,r.kt)("p",null,"This 3 new features of JSP 2.0 are just a very small list of the features introduced in JSP and Servlet in J2EE 1.4, but are my favorites. They are very easy to test and to adopt."))}c.isMDXComponent=!0}}]);
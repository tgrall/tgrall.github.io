"use strict";(self.webpackChunktgrall_blog=self.webpackChunktgrall_blog||[]).push([[26545],{3905:(t,e,a)=>{a.d(e,{Zo:()=>c,kt:()=>m});var r=a(67294);function n(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function o(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?o(Object(a),!0).forEach((function(e){n(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function l(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},o=Object.keys(t);for(r=0;r<o.length;r++)a=o[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)a=o[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var p=r.createContext({}),s=function(t){var e=r.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},c=function(t){var e=s(t.components);return r.createElement(p.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var a=t.components,n=t.mdxType,o=t.originalType,p=t.parentName,c=l(t,["components","mdxType","originalType","parentName"]),d=s(a),m=n,b=d["".concat(p,".").concat(m)]||d[m]||u[m]||o;return a?r.createElement(b,i(i({ref:e},c),{},{components:a})):r.createElement(b,i({ref:e},c))}));function m(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var o=a.length,i=new Array(o);i[0]=d;var l={};for(var p in e)hasOwnProperty.call(e,p)&&(l[p]=e[p]);l.originalType=t,l.mdxType="string"==typeof t?t:n,i[1]=l;for(var s=2;s<o;s++)i[s]=a[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},59518:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=a(87462),n=(a(67294),a(3905));const o={title:"Getting started with MapR-DB Table Replication",categories:"nosql maprdb mapr replication"},i=void 0,l={permalink:"/blog/2017/08/08/getting-started-with-mapr-db-table-replication",editUrl:"https://github.dev/tgrall/tgrall.github.io/blob/main/blog/2017-08-08-getting-started-with-mapr-db-table-replication.md",source:"@site/blog/2017-08-08-getting-started-with-mapr-db-table-replication.md",title:"Getting started with MapR-DB Table Replication",description:"Introduction",date:"2017-08-08T00:00:00.000Z",formattedDate:"August 8, 2017",tags:[],readingTime:5.19,hasTruncateMarker:!0,authors:[],frontMatter:{title:"Getting started with MapR-DB Table Replication",categories:"nosql maprdb mapr replication"},prevItem:{title:"Getting Started With MapR-DB JSON REST API",permalink:"/blog/2018/05/23/getting-started-with-mapr-db-json-rest-api"},nextItem:{title:"Getting Started with Kafka REST Proxy for MapR Streams",permalink:"/blog/2017/01/20/getting-started-with-kafka-rest-proxy-for-mapr-streams"}},p={authorsImageUrls:[]},s=[{value:"Introduction",id:"introduction",level:2}],c={toc:s};function u(t){let{components:e,...a}=t;return(0,n.kt)("wrapper",(0,r.Z)({},c,a,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"introduction"},"Introduction"),(0,n.kt)("p",null,"MapR-DB Table Replication allows data to be replicated to another table that could be on on the same cluster or in another cluster. This is different from the automatic and intra-cluster replication that copies the data into different physical nodes for high availability and prevent data loss."),(0,n.kt)("p",null,"This tutorial focuses on the MapR-DB Table Replication that replicates data between tables on different clusters."),(0,n.kt)("p",null,"Replicating data between different clusters allows you to:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"provide another level of disaster recovery that protects your data and applications against global data center failure,"),(0,n.kt)("li",{parentName:"ul"},"push data close to the applications and users, "),(0,n.kt)("li",{parentName:"ul"},"aggregate the data from mutliple datacenters.")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Replication Topologies")),(0,n.kt)("p",null,"MapR-DB Table Replication provides various topologies to adapt the replication to the business and technical requirements:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("em",{parentName:"li"},"Master-slave replication")," : in this topology, you replicate one way from source tables to replicas. The replicas can be in a remote cluster or in the cluster where the source tables are located."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("em",{parentName:"li"},"Multi-Master replication")," : in this replication topology, there are two master-slave relationships, with each table playing both the role of a master and a slave. Client applications update both tables and each table replicates updates to the other.")),(0,n.kt)("p",null,"In this example you will learn how to setup multi-master replication."))}u.isMDXComponent=!0}}]);